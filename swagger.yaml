swagger: "2.0"
info:
  description: Amazon Web Service (AWS) command line interface
  title: aws-cli
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/aws-cli
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/aws-cli/issues
    url: https://github.com/direktiv-apps/aws-cli  
    categories:
    - cloud
    - build
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function provides AWS's CLI version 2.7.18 and is based on the official [AWS CLI image](https://hub.docker.com/r/amazon/aws-cli) on Docker Hub. 
      The following additional packages are installed:

      - wget

      - git

      - curl
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            required: ["access-key", "secret-key"]
            properties:
              access-key:
                type: string
                example: ABCABCABCDABCABCABCD
                description: AWS access key.
              secret-key:
                type: string
                example: Abcd45sa01234+ThIsIsSuPeRsEcReT
                description: AWS secret key.
              region:
                type: string
                description: Region the commands should be executed in.
                default: us-east-1
                example: eu-central-1
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                      example: aws --version
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: aws-cli
          image: gcr.io/direktiv/functions/aws-cli:1.0
          type: knative-workflow
      x-direktiv-examples:
        # ADD MORE EXAMPLES HERE
        - title: Basic
          content: |-
            - id: aws-cli
              type: action
              action:
                function: aws-cli
                secrets: ["awsAccess", "awsSecret", "awsRegion"]
                input: 
                  access-key: jq(.secrets.awsAccess)
                  secret-key: jq(.secrets.awsSecret)
                  region: jq(.secrets.awsRegion)
                  commands:
                  - command: aws ec2 describe-instances
      x-direktiv-secrets:
        - name: awsAccess
          description: AWS access key (IAM)
        - name: awsSecret
          description: AWS secret key (IAM)
        - name: awsRegion
          description: AWS region where the commands run
      x-direktiv:  
        cmds:
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
          env:  
            - AWS_ACCESS_KEY_ID={{ .Body.AccessKey }}
            - AWS_SECRET_ACCESS_KEY={{ .Body.SecretKey }}
            - AWS_DEFAULT_REGION={{ default "us-east-1" .Body.Region }}
            - AWS_DEFAULT_OUTPUT=json
        output: |
          {
            "aws-cli": {{ index . 0 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            aws-cli:
            - result: VTQ3U....c2ZaN0FJaldjVnkra2tKV==
              success: true
            - result: exit status 254
              success: false
          schema:
            type: object
            properties:
              aws-cli:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
