// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Execute AWS CLI commands from Direktiv.",
    "title": "aws-cli",
    "version": "1.0.0",
    "x-direktiv-meta": {
      "category": "cloud",
      "container": "direktiv/aws-cli",
      "issues": "https://github.com/direktiv-apps/aws-cli/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This service excutes AWS CLI commands. All commands are getting executed in the specified region and return their results as JSON.",
      "maintainer": "[direktiv.io](https://www.direktiv.io)",
      "url": "https://github.com/direktiv-apps/aws-cli"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "description": "The request body includes a list of AWS CLI commands.",
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "access-key",
                "secret-key"
              ],
              "properties": {
                "access-key": {
                  "description": "AWS access key.",
                  "type": "string",
                  "example": "ABCABCABCDABCABCABCD"
                },
                "commands": {
                  "description": "Array of AWS cli commands. Does NOT include 'aws'.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "ecr get-login-password",
                    "ec2 describe-instances"
                  ]
                },
                "region": {
                  "description": "Region the commands should be executed in.",
                  "type": "string",
                  "default": "us-east-1",
                  "example": "eu-central-1"
                },
                "secret-key": {
                  "description": "AWS secret key.",
                  "type": "string",
                  "example": "Abcd45sa01234+ThIsIsSuPeRsEcReT"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AWS CLI response.",
            "schema": {
              "type": "object",
              "properties": {
                "output": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "additionalProperties": false
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "foreach",
              "continue": false,
              "env": [
                "AWS_ACCESS_KEY_ID={{ .Body.AccessKey }}",
                "AWS_SECRET_ACCESS_KEY={{ .Body.SecretKey }}",
                "AWS_DEFAULT_REGION={{ default \"us-east-1\" .Body.Region }}"
              ],
              "exec": "aws {{ .Item }}",
              "loop": ".Commands"
            }
          ]
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: aws-cli\n       secrets: [\"awsacess\", \"awssecret\"]\n       input:\n        access-key: jq(.secrets.awsacess)\n        secret-key: jq(.secrets.awssecret)\n        region: eu-central-1\n        commands:\n        - ec2 describe-instances\n        - ecr get-login-password",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: aws-cli\n    image: direktiv/aws-cli\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Execute AWS CLI commands from Direktiv.",
    "title": "aws-cli",
    "version": "1.0.0",
    "x-direktiv-meta": {
      "category": "cloud",
      "container": "direktiv/aws-cli",
      "issues": "https://github.com/direktiv-apps/aws-cli/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This service excutes AWS CLI commands. All commands are getting executed in the specified region and return their results as JSON.",
      "maintainer": "[direktiv.io](https://www.direktiv.io)",
      "url": "https://github.com/direktiv-apps/aws-cli"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "description": "The request body includes a list of AWS CLI commands.",
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "access-key",
                "secret-key"
              ],
              "properties": {
                "access-key": {
                  "description": "AWS access key.",
                  "type": "string",
                  "example": "ABCABCABCDABCABCABCD"
                },
                "commands": {
                  "description": "Array of AWS cli commands. Does NOT include 'aws'.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "ecr get-login-password",
                    "ec2 describe-instances"
                  ]
                },
                "region": {
                  "description": "Region the commands should be executed in.",
                  "type": "string",
                  "default": "us-east-1",
                  "example": "eu-central-1"
                },
                "secret-key": {
                  "description": "AWS secret key.",
                  "type": "string",
                  "example": "Abcd45sa01234+ThIsIsSuPeRsEcReT"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AWS CLI response.",
            "schema": {
              "type": "object",
              "properties": {
                "output": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "additionalProperties": false
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "foreach",
              "continue": false,
              "env": [
                "AWS_ACCESS_KEY_ID={{ .Body.AccessKey }}",
                "AWS_SECRET_ACCESS_KEY={{ .Body.SecretKey }}",
                "AWS_DEFAULT_REGION={{ default \"us-east-1\" .Body.Region }}"
              ],
              "exec": "aws {{ .Item }}",
              "loop": ".Commands"
            }
          ]
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: aws-cli\n       secrets: [\"awsacess\", \"awssecret\"]\n       input:\n        access-key: jq(.secrets.awsacess)\n        secret-key: jq(.secrets.awssecret)\n        region: eu-central-1\n        commands:\n        - ec2 describe-instances\n        - ecr get-login-password",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: aws-cli\n    image: direktiv/aws-cli\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "PostOKBodyOutput": {
      "type": "object",
      "properties": {
        "result": {
          "additionalProperties": false
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
